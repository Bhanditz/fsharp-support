//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by IntelliJ parserGen
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 0168, 0219, 0108, 0414, 0114
// ReSharper disable RedundantNameQualifier
namespace JetBrains.ReSharper.Psi.FSharp.Impl.Tree
{
  public abstract class ElementType
  {
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType ERROR_ELEMENT = JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ErrorElement.NODE_TYPE;
    public const int ERROR_ELEMENT_NODE_TYPE_INDEX = JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.ErrorElement.NODE_TYPE_INDEX;
    public static readonly JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeNodeType F_SHARP_FILE = new F_SHARP_FILE_INTERNAL();
    public const int F_SHARP_FILE_NODE_TYPE_INDEX = 2000;
    private class F_SHARP_FILE_INTERNAL : JetBrains.ReSharper.Psi.FSharp.Tree.FSharpCompositeNodeType
    {
      public F_SHARP_FILE_INTERNAL() : base("F_SHARP_FILE", F_SHARP_FILE_NODE_TYPE_INDEX) { }
      public override JetBrains.ReSharper.Psi.ExtensionsAPI.Tree.CompositeElement Create()
      {
        return new FSharpFile();
      }
    }
    }
}
