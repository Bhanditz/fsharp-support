//------------------------------------------------------------------------------
// <auto-generated>
//     Generated by TokenGenerator
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JetBrains.ReSharper.Psi.ExtensionsAPI.Tree;
using JetBrains.Text;
using JetBrains.ReSharper.Psi;
using JetBrains.ReSharper.Psi.Parsing;

namespace JetBrains.ReSharper.Psi.FSharp.Parsing
{
  public partial class FSharpTokenType
  {
    //Tokens
    public const int KEYWORD_NODE_TYPE_INDEX = 1000;
    public static readonly TokenNodeType KEYWORD = new FSharpTokenNodeType("KEYWORD", KEYWORD_NODE_TYPE_INDEX);
    public const int IDENTIFIER_NODE_TYPE_INDEX = 1001;
    public static readonly TokenNodeType IDENTIFIER = new FSharpTokenNodeType("IDENTIFIER", IDENTIFIER_NODE_TYPE_INDEX);
    public const int LITERAL_NODE_TYPE_INDEX = 1002;
    public static readonly TokenNodeType LITERAL = new FSharpTokenNodeType("LITERAL", LITERAL_NODE_TYPE_INDEX);
    public const int STRING_NODE_TYPE_INDEX = 1003;
    public static readonly TokenNodeType STRING = new FSharpTokenNodeType("STRING", STRING_NODE_TYPE_INDEX);
    public const int OPERATOR_NODE_TYPE_INDEX = 1004;
    public static readonly TokenNodeType OPERATOR = new FSharpTokenNodeType("OPERATOR", OPERATOR_NODE_TYPE_INDEX);
    public const int COMMENT_NODE_TYPE_INDEX = 1005;
    public static readonly TokenNodeType COMMENT = new FSharpTokenNodeType("COMMENT", COMMENT_NODE_TYPE_INDEX);
    public const int TEXT_NODE_TYPE_INDEX = 1006;
    public static readonly TokenNodeType TEXT = new FSharpTokenNodeType("TEXT", TEXT_NODE_TYPE_INDEX);
    public const int DEAD_CODE_NODE_TYPE_INDEX = 1007;
    public static readonly TokenNodeType DEAD_CODE = new FSharpTokenNodeType("DEAD_CODE", DEAD_CODE_NODE_TYPE_INDEX);
    public const int FAKE_NODE_TYPE_INDEX = 1008;
    public static readonly TokenNodeType FAKE = new FSharpTokenNodeType("FAKE", FAKE_NODE_TYPE_INDEX);
    public const int LBRACK_NODE_TYPE_INDEX = 1009;
    public static readonly TokenNodeType LBRACK = new FSharpTokenNodeType("LBRACK", LBRACK_NODE_TYPE_INDEX);
    public const int RBRACK_NODE_TYPE_INDEX = 1010;
    public static readonly TokenNodeType RBRACK = new FSharpTokenNodeType("RBRACK", RBRACK_NODE_TYPE_INDEX);
    public const int LBRACE_NODE_TYPE_INDEX = 1011;
    public static readonly TokenNodeType LBRACE = new FSharpTokenNodeType("LBRACE", LBRACE_NODE_TYPE_INDEX);
    public const int RBRACE_NODE_TYPE_INDEX = 1012;
    public static readonly TokenNodeType RBRACE = new FSharpTokenNodeType("RBRACE", RBRACE_NODE_TYPE_INDEX);
    public const int LPAREN_NODE_TYPE_INDEX = 1013;
    public static readonly TokenNodeType LPAREN = new FSharpTokenNodeType("LPAREN", LPAREN_NODE_TYPE_INDEX);
    public const int RPAREN_NODE_TYPE_INDEX = 1014;
    public static readonly TokenNodeType RPAREN = new FSharpTokenNodeType("RPAREN", RPAREN_NODE_TYPE_INDEX);
    public const int DOT_NODE_TYPE_INDEX = 1015;
    public static readonly TokenNodeType DOT = new FSharpTokenNodeType("DOT", DOT_NODE_TYPE_INDEX);

    private const int LAST_GENERATED_TOKEN_TYPE_INDEX = 1016;  }
}
